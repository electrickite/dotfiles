# Read `man 5 sway` for a complete reference.

#
# Variables
#
set {
    # Logo key. Use Mod1 for Alt.
    $mod Mod4

    # Home row direction keys, like vim
    $left h
    $down j
    $up k
    $right l

    # Preferred terminal emulator
    $term gnome-terminal

    # dmenu-compatible command
    $dmenu bemenu
    $dmenuargs -i --list=12 --nb='#282828' --nf='#bdae93' --fb='#3c3836' --ff='#fbf1c7' --tb='#3c3836' --tf='#bdae93' --hb='#32302f' --hf='#fbf1c7'
    $inlineargs -i --nb='#3c3836' --nf='#bdae93' --fb='#3c3836' --ff='#fbf1c7' --tb='#3c3836' --tf='#bdae93' --hb='#3c3836' --hf='#fbf1c7'

    # Web browser
    $browser firefox

    # Application launcher
    # Note: it's recommended that you pass the final command to sway
    $menu j4-dmenu-desktop --dmenu="$dmenu $inlineargs --prompt=Run:" --term=$term --usage-log=$HOME/.cache/j4.cache --no-generic

    # Background image
    $img ~/Pictures/bg.jpg

    # Screen lock
    $lock dbus-send --print-reply --dest=org.keepassxc.KeePassXC.MainWindow /keepassxc org.keepassxc.MainWindow.lockAllDatabases; swaylock -f --image $img
    #$lock dbus-send --type=method_call --dest=org.gnome.ScreenSaver /org/gnome/ScreenSaver org.gnome.ScreenSaver.Lock

    # Misc
    $screenshot $(date +'%Y-%m-%d-%H%M%S_screenshot.png')
    $battery_status /sys/class/power_supply/BAT0/status
    $wob_fifo $XDG_RUNTIME_DIR/wob.sock
}

#
# Appearance
#
gaps outer 0
gaps inner 10
smart_gaps on

set {
    $bg            #d65d0e
    $bg-inactive   #3c3836
    $bg-urgent     #cc241d
    $text          #fbf1c7
    $text-inactive #a89984
    $osdfg         #ffebdbb2
    $osdbg         #ff1d2021

    $bar           #3c3836
    $statusline    #e0e0e0
}

client.focused          $bg           $bg-inactive $text          $bg $bg
client.unfocused        $bg-inactive  $bg-inactive $text-inactive $bar $bar
client.focused_inactive $bg-inactive  $bg-inactive $text-inactive $bar $bar
client.urgent           $bg-urgent    $bg-urgent   $text          $bar $bar

default_border pixel 3
default_floating_border pixel 3

#
# Input/Output configuration
#
# Include host-specific configuration
include ~/.config/sway/$(hostname)/*

# Default wallpaper (more resolutions are available in __DATADIR__/backgrounds/sway/)
output * bg $img fill

# Cursor configuration
seat * hide_cursor 8000
seat * xcursor_theme default 32

#
# Idle configuration
#
# This will lock the screen after 8 minutes of inactivity, then turn off
# the displays after 10 minutes, and turn your screens back on when resumed.
# When on battery, it will suspend the computer after 20 minutes and will
# suspend the computer after 1 hour regardless of power source.
# It will also lock the screen before the computer goes to sleep.
exec swayidle -w \
    timeout 480 'loginctl lock-session' \
    timeout 600 'swaymsg "output * dpms off"' \
       resume 'swaymsg "output * dpms on"' \
    timeout 1200 '[ "$(cat $battery_status)" == Discharging ] && systemctl suspend' \
    timeout 3600 'systemctl suspend' \
    before-sleep '$lock' \
    lock '$lock' \
    after-resume 'swaymsg "output * dpms on"'
#    idlehint 5

# Also: prevent idle while any application is fullscreen
for_window {
    [class="^.*"] inhibit_idle fullscreen
    [app_id="^.*"] inhibit_idle fullscreen
}

### Key bindings
#
# Basics:
#
bindsym {
    # start a terminal
    $mod+Return exec $term

    # kill focused window
    $mod+Shift+q kill

    # Multi-purpose launcher
    $mod+Space exec $menu
    $mod+Shift+Space exec bemenu-run $inlineargs --prompt=Run: --no-exec | xargs -r swaymsg exec -- $term --
    $mod+Slash exec fd | $dmenu $dmenuargs --prompt=Find: | xargs -I{} swaymsg exec -- mimeo \\\"{}\\\"
    $mod+n exec networkmanager_dmenu
    $mod+equal exec = --dmenu=$dmenu -- $dmenuargs --tf='#fbf1c7'
    $mod+Backspace exec $browser
    $mod+backslash exec $browser
    $mod+Shift+Backspace exec echo "" | $dmenu $inlineargs --prompt=Search: | xargs -I{} swaymsg exec -- $browser --search \\\"{}\\\"
    $mod+Shift+backslash exec echo "" | $dmenu $inlineargs --prompt=Search: | xargs -I{} swaymsg exec -- $browser --search \\\"{}\\\"

    # reload the configuration file
    $mod+Shift+c reload, exec "systemctl --user restart kanshi.service"
}
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

#
# System menu mode
#
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (p) shutdown
mode "$mode_system" {
  bindsym {
    l exec loginctl lock-session, mode "default"
    e exec swaymsg exit, mode "default"
    s exec systemctl suspend, mode "default"
    h exec systemctl hibernate, mode "default"
    r exec systemctl reboot, mode "default"
    p exec systemctl poweroff, mode "default"

    # back to normal: Enter or Escape
    Return mode "default"
    Escape mode "default"
  }
}
bindsym $mod+Escape mode "$mode_system"
bindsym XF86PowerOff mode "$mode_system"

#
# Moving around:
#
bindsym {
    # Move your focus around
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    # or use $mod+[up|down|left|right]
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    # ditto, with arrow keys
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right
}

#
# Workspaces:
#
bindsym {
    # Cycle through active workspaces
    Alt+Tab workspace next
    Alt+Shift+Tab workspace prev

    # switch to workspace
    $mod+1 workspace 1
    $mod+2 workspace 2
    $mod+3 workspace 3
    $mod+4 workspace 4
    $mod+5 workspace 5
    $mod+6 workspace 6
    $mod+7 workspace 7
    $mod+8 workspace 8
    $mod+9 workspace 9
    $mod+0 workspace 10
    # move focused container to workspace
    $mod+Shift+1 move container to workspace 1
    $mod+Shift+2 move container to workspace 2
    $mod+Shift+3 move container to workspace 3
    $mod+Shift+4 move container to workspace 4
    $mod+Shift+5 move container to workspace 5
    $mod+Shift+6 move container to workspace 6
    $mod+Shift+7 move container to workspace 7
    $mod+Shift+8 move container to workspace 8
    $mod+Shift+9 move container to workspace 9
    $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
}

#
# Layout stuff:
#
bindsym {
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split

    # Make the current focus fullscreen
    $mod+F11 fullscreen
    $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+t floating toggle

    # Swap focus between the tiling area and the floating area
    $mod+t focus mode_toggle

    # move focus to the parent container
    $mod+a focus parent
}

#
# Scratchpad:
#
bindsym {
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
}

#
# Resizing containers:
#
mode "resize" {
  bindsym {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    $left resize shrink width 10px
    $down resize grow height 10px
    $up resize shrink height 10px
    $right resize grow width 10px

    # ditto, with arrow keys
    Left resize shrink width 10px
    Down resize grow height 10px
    Up resize shrink height 10px
    Right resize grow width 10px

    # return to default mode
    Return mode "default"
    Escape mode "default"
  }
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    #swaybar_command waybar
    position top
    status_command i3status
    separator_symbol "|"

    colors {
        statusline $statusline
        background $bar
        separator  #d65d0e
        focused_workspace  #fe8019 #d65d0e #fbf1c7
        active_workspace   #fb4934 #cc241d #ebdbb2
        inactive_workspace #504945 #1d2021 #a89984
        urgent_workspace   #d79921 #fe8019 #1d2021
    }
}


#
# Hotkeys
#
bindsym {
    # Pulse Audio controls
    XF86AudioRaiseVolume exec pamixer -ui 5 && paplay $HOME/.config/sway/drip.ogg && pamixer --get-volume | sed 's/$/ \\$osdbg \\$osdfg \\$osdfg/' > $wob_fifo
    XF86AudioLowerVolume exec pamixer -ud 5 && paplay $HOME/.config/sway/drip.ogg && pamixer --get-volume | sed 's/$/ \\$osdbg \\$osdfg \\$osdfg/' > $wob_fifo
    XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume | sed 's/$/ \\$osdbg \\$osdfg \\$osdfg/' > $wob_fifo

    # Sreen brightness controls
    XF86MonBrightnessUp exec light -T 1.4 && light -G | cut -d'.' -f1 | sed 's/$/ \\$osdbg \\$osdfg \\$osdfg/' > $wob_fifo
    XF86MonBrightnessDown exec light -T 0.72 && light -G | cut -d'.' -f1 | sed 's/$/ \\$osdbg \\$osdfg \\$osdfg/' > $wob_fifo

    # Media player controls
    XF86AudioPlay exec playerctl play
    XF86AudioPause exec playerctl pause
    XF86AudioNext exec playerctl next
    XF86AudioPrev exec playerctl previous

    # Screenshots
    Print exec grim "$(xdg-user-dir PICTURES)/$screenshot" && notify-send "Sceenshot saved" "$screenshot"
    $mod+Print exec slurp | grim -g - "$(xdg-user-dir PICTURES)/$screenshot" && notify-send "Sceenshot saved" "$screenshot"

    # Caffeine
    $mod+c exec 'killall -q caffeinated || caffeinated -d'

    # KeepassXC
    $mod+p exec "if ! pgrep -x keepassxc; then swaymsg exec keepassxc; fi"; [app_id="org.keepassxc.KeePassXC"] scratchpad show, move position center

    # Display Power and Scaling
    $mod+o exec systemctl --user restart kanshi
    $mod+Shift+o output * scale 1
    $mod+i output * dpms on
    $mod+Shift+i output * dpms off
}

#
# Application tweaks
#
for_window {
    [app_id="nm-openconnect-auth-dialog"] floating enable
    [app_id="qemu"] floating enable
    [app_id="desktopclient.nextcloud.com.nextcloud"] floating enable
    [app_id="libreoffice-.*"] border normal 3
    [app_id="org.keepassxc.KeePassXC"] floating enable, resize set 900 680, move scratchpad, scratchpad show, move position center
}


#
# Startup commands
#

# Configure environment
set $gnome-schema org.gnome.desktop.interface
exec {
    light -N 1
    xrdb -load ~/.Xresources
}
exec_always {
    gsettings set $gnome-schema gtk-theme 'Adwaita-dark'
    gsettings set $gnome-schema icon-theme 'Papirus-Dark'
    gsettings set org.gnome.desktop.interface cursor-size 32
}

# Start sway-session systemd target
exec "systemctl --user import-environment; systemctl --user start sway-session.target"

# Autostart applications
exec $term -- bash --rcfile $HOME/.config/sway/bashrc -i

#include /etc/sway/config.d/*
